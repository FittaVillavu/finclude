procedure TakeBreak(Time: Integer);
var
  Bmp, I: Integer;
  Layer: TReflectionGraphics;
  S: TStringArray;
  T: TReflectTimer;
begin
  T.start;
  Bmp := LoadBitmap(IncludePath + 'finclude/graphic/break.bmp');
  repeat
    If Not locPlayer.IsLoggedIn then
    begin
      S := ['           ' + ScriptName + ' v' + ScriptRev,
            '',
            'Time running: ' + Reflect.Time.msToTime(GetTimeRunning, TIME_SHORT),
            'Total break was: ' + Reflect.Time.msToTime(Time, TIME_SHORT),
            'Time left on break: ' + Reflect.Time.msToTime(Time-T.Elapsedtime , TIME_SHORT)];

      Layer := Reflect.Smart.Graphics;
      Layer.Clear;

      Layer.DrawBitmap(Bmp, Point(229, 193), False);
      Layer.DrawClippedText('Breaking', 'BigChars', Point(308, 189), clYellow);
      For I:=0 to High(S)do
        Layer.DrawClippedText(S[I], 'UpChars07', Point(250, 235+(I*14)), clYellow);

      Wait(4000+Random(7000));
    end else
      Wait(3000+Random(3000));
  until(T.Elapsedtime >  Time);
  Layer := Reflect.Smart.Graphics;
  Layer.Clear;
  FreeBitmap(Bmp);
end;
